plugins {
	id 'java'
	id 'java-library'
	id 'maven-publish'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'org.owasp.dependencycheck' version '9.2.0'
	id 'checkstyle'
	id 'pmd'
	id 'jacoco'
	id 'com.github.ben-manes.versions' version '0.51.0'
}

group = 'com.github.hmcts'
version = 'dev-snapshot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

checkstyle {
	getConfigDirectory().set(new File(rootDir, "config/checkstyle"))
}

pmd {
	consoleOutput = true
	ruleSetFiles = files("$rootProject.projectDir/config/pmd/ruleset.xml")
}

ext {
	springCloudVersion = "2023.0.2"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
	dependencies {
		dependency group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.70'
		dependency group: 'org.bouncycastle', name: 'bcpkix-jdk18on', version: '1.78.1'
		// CVE-2018-10237 - Unbounded memory allocation
		dependencySet(group: 'com.google.guava', version: '33.2.1-jre') {
			entry 'guava'
		}
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
	google()
}

// before committing a change, make sure task still works
dependencyUpdates {
	def isNonStable = { String version ->
		def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
		def regex = /^[0-9,.v-]+$/
		return !stableKeyword && !(version ==~ regex)
	}
	rejectVersionIf { selection -> // <---- notice how the closure argument is named
		return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
	}
}

dependencyCheck {
	// Specifies if the build should be failed if a CVSS score above a specified level is identified.
	// range of 0-10 fails the build, anything greater and it doesn't fail the build
	failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
	suppressionFile = "$rootDir/config/owasp/suppressions.xml"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.34'
	annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.34'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

java {
	withJavadocJar()
	withSourcesJar()
}

publishing {
	publications {
		Main(MavenPublication) {
			from components.java
			groupId project.group
			artifactId 'idam-oidc-auth-support'
			version project.version
		}
	}
}

bootJar {
	enabled = false
}
jar {
	enabled = true
	archiveClassifier = ''
}